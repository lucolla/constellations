<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Opacity Control</title>
	<style type="text/css">
		#map { height: 250px; width: 500px; }
	</style>
	<script type="text/javascript" src="http://maps.google.com/maps/api/js?v=3.14&sensor=false"></script>
	<script type="text/javascript" src="ExtDraggableObject.js"></script>
	<script type="text/javascript" src="CustomTileOverlay.js"></script>
	<script type="text/javascript">
		/*******************************************************************************
		Copyright (c) 2010-2012. Gavin Harriss
		Site: http://www.gavinharriss.com/
		Originally developed for: http://www.topomap.co.nz/

		Licences: Creative Commons Attribution 3.0 New Zealand License
		http://creativecommons.org/licenses/by/3.0/nz/
		******************************************************************************/

		var OPACITY_MAX_PIXELS = 57; // Width of opacity control image
		var map, overlay;
		
		function init() {
			// Map options for example map
			var mapOptions = {
				zoom: 13,
				minZoom: 13,
				maxZoom: 13,
				center: new google.maps.LatLng(-42.8598, 171.8043),
				disableDefaultUI: true,
				mapTypeId: google.maps.MapTypeId.SATELLITE,
				navigationControl: false,
				mapTypeControl: false,
				scaleControl: false,
				zoomControl: false,
				panControl: false
			}

			map = new google.maps.Map(document.getElementById("map"), mapOptions);

			var initialOpacity = 40;

			overlay = new CustomTileOverlay(map, initialOpacity);
			overlay.show();

			google.maps.event.addListener(map, 'tilesloaded', function () {
				overlay.deleteHiddenTiles(map.getZoom());
			});

			// Add opacity control and set initial value
			createOpacityControl(map, initialOpacity);
		}

		function createOpacityControl(map, opacity) {
			var sliderImageUrl = "opacity-slider3d14.png";
			
			// Create main div to hold the control.
			var opacityDiv = document.createElement('DIV');
			opacityDiv.setAttribute("style", "margin:5px;overflow-x:hidden;overflow-y:hidden;background:url(" + sliderImageUrl + ") no-repeat;width:71px;height:21px;cursor:pointer;");

			// Create knob
			var opacityKnobDiv = document.createElement('DIV');
			opacityKnobDiv.setAttribute("style", "padding:0;margin:0;overflow-x:hidden;overflow-y:hidden;background:url(" + sliderImageUrl + ") no-repeat -71px 0;width:14px;height:21px;");
			opacityDiv.appendChild(opacityKnobDiv);

			var opacityCtrlKnob = new ExtDraggableObject(opacityKnobDiv, {
				restrictY: true,
				container: opacityDiv
			});

			google.maps.event.addListener(opacityCtrlKnob, "dragend", function () {
				setOpacity(opacityCtrlKnob.valueX());
			});

			google.maps.event.addDomListener(opacityDiv, "click", function (e) {
				var left = findPosLeft(this);
				var x = e.pageX - left - 5; // - 5 as we're using a margin of 5px on the div
				opacityCtrlKnob.setValueX(x);
				setOpacity(x);
			});

			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(opacityDiv);

			// Set initial value
			var initialValue = OPACITY_MAX_PIXELS / (100 / opacity);
			opacityCtrlKnob.setValueX(initialValue);
			setOpacity(initialValue);
		}

		function setOpacity(pixelX) {
			// Range = 0 to OPACITY_MAX_PIXELS
			var value = (100 / OPACITY_MAX_PIXELS) * pixelX;
			if (value < 0) value = 0;
			if (value == 0) {
				if (overlay.visible == true) {
					overlay.hide();
				}
			}
			else {
				overlay.setOpacity(value);
				if (overlay.visible == false) {
					overlay.show();
				}
			}
		}

		function findPosLeft(obj) {
			var curleft = 0;
			if (obj.offsetParent) {
				do {
					curleft += obj.offsetLeft;
				} while (obj = obj.offsetParent);
				return curleft;
			}
			return undefined;
		}
		
		google.maps.event.addDomListener(window, 'load', init);
	</script>
</head>
<body>
	<div id="map"></div>
</body>
</html>